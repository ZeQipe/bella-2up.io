#!/usr/bin/env python3
"""
–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è
"""
import os

def count_kb_lines():
    kb_path = "kb"
    total_lines = 0
    total_files = 0
    
    print("=== –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–û–í KB ===")
    
    for root, dirs, files in os.walk(kb_path):
        for file in files:
            if not file.endswith('.txt'):
                continue
            if file.lower() == "promo.txt":  # –ò—Å–∫–ª—é—á–∞–µ–º –ø—Ä–æ–º–æ —Ñ–∞–π–ª
                print(f"‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º: {file} (–ø—Ä–æ–º–æ —Ñ–∞–π–ª)")
                continue
                
            file_path = os.path.join(root, file)
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –∫–∞–∫ –≤ –∫–æ–¥–µ
                lines = [line.strip() for line in content.split('\n') if line.strip()]
                valid_lines = [line for line in lines if len(line) >= 10]
                
                print(f"üìÑ {file}:")
                print(f"   –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {len(lines)}")
                print(f"   –í–∞–ª–∏–¥–Ω—ã—Ö —Å—Ç—Ä–æ–∫ (>=10 —Å–∏–º–≤–æ–ª–æ–≤): {len(valid_lines)}")
                
                total_lines += len(valid_lines)
                total_files += 1
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {file}: {e}")
    
    print(f"\nüìä –ò–¢–û–ì–û:")
    print(f"   –§–∞–π–ª–æ–≤: {total_files}")
    print(f"   –°—Ç—Ä–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {total_lines}")
    print(f"   –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤: {total_lines * 0.1:.1f} —Å–µ–∫—É–Ω–¥")
    
    return total_lines

if __name__ == "__main__":
    count_kb_lines()
